{"version":3,"file":"AppTheme.js","sourceRoot":"","sources":["../../src/Libraries/AppTheme/AppTheme.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,YAAY,CAAC;;;AAEb,+CAIsB;AAGtB,+EAA+E;AAC/E,+EAA+E;AAC/E,sBAAsB;AACtB,MAAM,cAAc,GAAG,4BAAa,CAAC,WAAW,IAAI;IAClD,mBAAmB,EAAE,KAAK;IAC1B,yBAAyB,EAAE;QACzB,eAAe,EAAE,EAAE;QACnB,eAAe,EAAE,EAAE;QACnB,aAAa,EAAE,EAAE;QACjB,cAAc,EAAE,EAAE;QAClB,kBAAkB,EAAE,EAAE;QACtB,aAAa,EAAE,EAAE;QACjB,WAAW,EAAE,EAAE;QACf,eAAe,EAAE,EAAE;KACpB;CACF,CAAC;AAEF,MAAM,cAAe,SAAQ,iCAAkB;IAI7C;QACE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,mBAAmB,GAAG,cAAc,CAAC,yBAAyB,CAAC;QACpE,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC,mBAAmB,CAAC;QAC1D,IAAI,CAAC,WAAW,CACd,qBAAqB,EACrB,CAAC,WAAsC,EAAE,EAAE;YACzC,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC,cAAc,CAAC;YAClD,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC,kBAAkB,CAAC;QAC5D,CAAC,CACF,CAAC;IACJ,CAAC;IAED,WAAW,CACT,SAAgC,EAChC,QAA0D;QAE1D,OAAO,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAChD,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,IAAI,yBAAyB;QAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;CACF;AAGY,QAAA,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n * @format\n */\n'use strict';\n\nimport {\n  EmitterSubscription,\n  NativeEventEmitter,\n  NativeModules,\n} from 'react-native';\nimport {IHighContrastColors, IHighContrastChangedEvent} from './AppThemeTypes';\n\n// We previously gracefully handled importing AppTheme in the Jest environment.\n// Mock the NM until we have a coherent story for exporting our own Jest mocks,\n// or remove this API.\nconst NativeAppTheme = NativeModules.RTCAppTheme || {\n  initialHighContrast: false,\n  initialHighContrastColors: {\n    ButtonFaceColor: '',\n    ButtonTextColor: '',\n    GrayTextColor: '',\n    HighlightColor: '',\n    HighlightTextColor: '',\n    HotlightColor: '',\n    WindowColor: '',\n    WindowTextColor: '',\n  },\n};\n\nclass AppThemeModule extends NativeEventEmitter {\n  private _isHighContrast: boolean;\n  private _highContrastColors: IHighContrastColors;\n\n  constructor() {\n    super();\n\n    this._highContrastColors = NativeAppTheme.initialHighContrastColors;\n    this._isHighContrast = NativeAppTheme.initialHighContrast;\n    this.addListener(\n      'highContrastChanged',\n      (nativeEvent: IHighContrastChangedEvent) => {\n        this._isHighContrast = nativeEvent.isHighContrast;\n        this._highContrastColors = nativeEvent.highContrastColors;\n      },\n    );\n  }\n\n  addListener(\n    eventName: 'highContrastChanged',\n    listener: (nativeEvent: IHighContrastChangedEvent) => void,\n  ): EmitterSubscription {\n    return super.addListener(eventName, listener);\n  }\n\n  get isHighContrast(): boolean {\n    return this._isHighContrast;\n  }\n\n  get currentHighContrastColors(): IHighContrastColors {\n    return this._highContrastColors;\n  }\n}\n\nexport type AppTheme = AppThemeModule;\nexport const AppTheme = new AppThemeModule();\n"]}