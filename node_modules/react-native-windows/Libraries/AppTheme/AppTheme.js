/**
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 * @format
 */
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppTheme = void 0;
const react_native_1 = require("react-native");
// We previously gracefully handled importing AppTheme in the Jest environment.
// Mock the NM until we have a coherent story for exporting our own Jest mocks,
// or remove this API.
const NativeAppTheme = react_native_1.NativeModules.RTCAppTheme || {
    initialHighContrast: false,
    initialHighContrastColors: {
        ButtonFaceColor: '',
        ButtonTextColor: '',
        GrayTextColor: '',
        HighlightColor: '',
        HighlightTextColor: '',
        HotlightColor: '',
        WindowColor: '',
        WindowTextColor: '',
    },
};
class AppThemeModule extends react_native_1.NativeEventEmitter {
    constructor() {
        super();
        this._highContrastColors = NativeAppTheme.initialHighContrastColors;
        this._isHighContrast = NativeAppTheme.initialHighContrast;
        this.addListener('highContrastChanged', (nativeEvent) => {
            this._isHighContrast = nativeEvent.isHighContrast;
            this._highContrastColors = nativeEvent.highContrastColors;
        });
    }
    addListener(eventName, listener) {
        return super.addListener(eventName, listener);
    }
    get isHighContrast() {
        return this._isHighContrast;
    }
    get currentHighContrastColors() {
        return this._highContrastColors;
    }
}
exports.AppTheme = new AppThemeModule();
//# sourceMappingURL=AppTheme.js.map